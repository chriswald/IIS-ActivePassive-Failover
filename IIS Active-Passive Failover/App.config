<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
    </startup>

  <appSettings>
    
    <!-- The root URL the reverse proxy should send requests to when
          the health check is passing.
          Example: https://example.com/test/ -->
    <add key="ActiveRootUrl" value=""/>

    <!-- The root URL the reverse proxy should send requests to when
          the health check is failing.
          Example: https://example-backup.com/test/ -->
    <add key="PassiveRootUrl" value=""/>

    <!-- The path to the Web.config file with the reverse proxy rules. -->
    <add key="WebConfigPath" value="C:\inetpub\wwwroot\web.config"/>

    <!-- The name to assign the reverse proxy rule in Web.config. -->
    <add key="ReverseProxyRuleName" value="IvorySmugglingContracts"/>

    <!-- Path portion of the incoming URL that won't be sent to the
          proxied servers. This beings immediately following the host
          (and port). For example, if a request comes in to
          https://localhost/subpath/some/other/path and InboundSubpath
          is set to "subpath" then "/some/other/path" will be appended
          onto the end of the root URLs specified above in order to
          complete the request. -->
    <add key="InboundSubpath" value=""/>

    <!-- The URL to query to determine the availability of the
          "ActiveRootUrl" service. This path is appended to
          the ActiveRootUrl
          Example: "/healthcheck" => https://example.com/test/healthcheck -->
    <add key="HealthCheckPath" value=""/>

    <!-- What criteria to use to evaluate the health check response.
          "ResponseStatus": Check for a specific HTTP status. 
          "Match": Compare the response body to the specified regex.-->
    <add key="HealthCheckMode" value="ResponseStatus"/>

    <!-- The value to use to determine if the health check is successful.
          When HealthCheckMode is "ResponseStatus" this should be the HTTP
          status code to consider successful.
          When HealthCheckMode is "Match" this should be a regex to
          compare the response body against. -->
    <add key="HealthCheckValue" value="200"/>

    <!-- The number of seconds after which the health check should timeout.
          The active URL will be considered unavailable if the health check
          times out.-->
    <add key="HealthCheckTimeout" value="2"/>
    
    <!-- The number of seconds between health checks. -->
    <add key="HealthCheckInterval" value="30"/>
    
  </appSettings>
</configuration>